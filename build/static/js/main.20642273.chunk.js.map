{"version":3,"sources":["components/Counter.js","components/SettingsModal.js","components/App.js","serviceWorker.js","index.js"],"names":["Counter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","add","handleChange","bind","assertThisInitialized","nextProps","goal","value","renderD3","e","target","setState","_this2","id","concat","name","react_default","a","createElement","className","Tooltip","showIcon","direction","triggerText","Form","NumberInput","min","max","onChange","invalidText","Button","onClick","onAddClick","tau","Math","PI","ratio","color","newAngle","arc","d3","innerRadius","outerRadius","radius","startAngle","g","attr","append","boxSize","datum","endAngle","style","transition","attrTween","d","interpolate","t","valueText","goalText","text","React","Component","SettingsModal","inputs","nutrients","map","nutrient","key","label","ModalWrapper","buttonTriggerText","shouldCloseAfterSubmit","modalHeading","handleSubmit","App","caPerGram","cookies","Cookies","resetNutrients","handleAddClick","get","set","assign","saveStateToCookies","field","_this3","parseInt","_this4","_this5","calories","reduce","acc","counters","src_components_Counter","src_components_SettingsModal","class","href","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20642273.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Tooltip, Button, NumberInput, Form} from \"carbon-components-react\"\r\n\r\nimport './Counter.scss'\r\n// import {select} as d3.select from 'd3-selection'\r\n// import {interpolate} as d3.select from 'd3-interpolate'\r\n// import {arc} as d3.select from 'd3-shape'\r\n\r\nimport * as d3 from 'd3'\r\n\r\nclass Counter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {add: 0}\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return this.props.goal !== nextProps.goal || this.props.value !== nextProps.value\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderD3()\r\n    }\r\n    componentDidUpdate() {\r\n        this.renderD3();\r\n    }\r\n\r\n    handleChange(e) {\r\n        if (e && e.target.value)\r\n            this.setState({add: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const id = `${this.props.name}-add-value`;\r\n        return (\r\n            <div className=\"counter\">\r\n                <h1 className=\"bx--graph-header\">{this.props.name}</h1>\r\n                <div className=\"container\">\r\n                    <svg id={this.props.name}></svg>\r\n                    <div className=\"text\">\r\n                        <p className=\"value\" id={`${this.props.name}Value`}></p>\r\n                        <p className=\"goal\" id={`${this.props.name}Goal`}></p>\r\n                    </div>\r\n                        <Tooltip className=\"add-tool-tip\" showIcon={false} direction=\"top\" triggerText=\"Add\">\r\n                            <Form>\r\n                                <NumberInput \r\n                                    id={id}\r\n                                    min={0}\r\n                                    max={500}\r\n                                    onChange={this.handleChange}\r\n                                    invalidText=\"Invalid Number\"\r\n                                />\r\n                                <Button onClick={() => this.props.onAddClick(this.props.name, this.state.add)}>Add</Button>\r\n                            </Form>\r\n                        </Tooltip>\r\n                        \r\n                    {/* <svg \r\n                        onClick={() => this.props.onAddClick()} \r\n                        className=\"add\" width=\"20\" height=\"20\" viewBox=\"0 0 10 10\" fill=\"#5a6872\"><path d=\"M6 4h4v2H6v4H4V6H0V4h4V0h2v4z\"></path></svg> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderD3() {\r\n        // Based on this great Demo: http://bl.ocks.org/mbostock/5100636\r\n        const tau = 2 * Math.PI;\r\n        const radius = 80;\r\n        const padding = 30;\r\n        const boxSize = (radius + padding) * 2;\r\n        const ratio = this.props.value / this.props.goal;\r\n\r\n        let color = '#efc100';\r\n\r\n        if (ratio > 1) {\r\n            color = '#e0182d';\r\n        }\r\n        else if (ratio === 1) {\r\n            color = '#5aa700';\r\n        }\r\n        else if (ratio > 0.5) {\r\n            color = '#5aaafa'\r\n        }\r\n\r\n        const arc = d3.arc()\r\n            .innerRadius(radius)\r\n            .outerRadius(radius - 10)\r\n            .startAngle(0);\r\n\r\n        const svg = d3.select(`#${this.props.name}`)\r\n            .attr('width', boxSize)\r\n            .attr('height', boxSize);\r\n\r\n        const g = svg\r\n            .append('g')\r\n            .attr('transform', `translate(${boxSize / 2}, ${boxSize / 2})`);\r\n\r\n        // Background Arc\r\n        g.append('path')\r\n            .datum({ endAngle: tau })\r\n            .style('fill', '#dfe3e6')\r\n            .attr('d', arc)\r\n\r\n        // Foreground Arc\r\n        g.append('path')\r\n            .datum({ endAngle: 0 })\r\n            .style('fill', color)\r\n            .transition()\r\n            // .duration(1000)\r\n            // .delay(1000)\r\n            .attrTween('d', arcTween(ratio * tau));\r\n\r\n        // Text Labels\r\n        const valueText = d3.select(`#${this.props.name}Value`);\r\n        const goalText = d3.select(`#${this.props.name}Goal`);\r\n        valueText\r\n            .style('opacity', 0)\r\n            .transition()\r\n            // .duration(1000)\r\n            // .delay(1500)\r\n            .style('opacity', 1)\r\n            .text(`${this.props.value}g`);\r\n\r\n        goalText\r\n            .style('opacity', 0)\r\n            .transition()\r\n            // .duration(1000)\r\n            // .delay(1700)\r\n            .style('opacity', 1)\r\n            .text(`/${this.props.goal}g`);\r\n\r\n        // Animation function\r\n        function arcTween(newAngle) {\r\n            return function(d) {\r\n                const interpolate = d3.interpolate(d.endAngle, newAngle);\r\n                return function(t) {\r\n                    d.endAngle = interpolate(t);\r\n                    return arc(d)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Counter","import React from \"react\"\r\nimport {ModalWrapper, NumberInput} from \"carbon-components-react\"\r\n\r\nimport \"./SettingsModal.scss\"\r\n\r\nclass SettingsModal extends React.Component {\r\n    render() {\r\n        const inputs = this.props.nutrients.map((nutrient) =>\r\n            <div key={nutrient.name} className='input-group'>\r\n            <h3>{nutrient.name}</h3>\r\n            <NumberInput \r\n                id={`${nutrient.name}-value`} \r\n                min={0}\r\n                max={500}\r\n                value={nutrient.value}\r\n                label=\"Value\"\r\n                onChange={(e) => this.props.onChange(e, nutrient.name, \"value\")}\r\n                invalidText=\"Invalid Number\"\r\n            />\r\n            <NumberInput \r\n                id={`${nutrient.name}-goal`}\r\n                min={0}\r\n                max={500}\r\n                value={nutrient.goal}\r\n                label=\"Goal\"\r\n                onChange={(e) => this.props.onChange(e, nutrient.name, \"goal\")}\r\n                invalidText=\"Invalid Number\"\r\n            />\r\n        </div>\r\n        )\r\n        return (\r\n            <ModalWrapper\r\n            id=\"input-modal\"\r\n            buttonTriggerText=\"Settings\"\r\n            shouldCloseAfterSubmit={true}\r\n            modalHeading=\"Settings\"\r\n            handleSubmit={()=>true}\r\n        >   \r\n        {inputs}\r\n        </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SettingsModal","import React from \"react\";\r\nimport Counter from \"./Counter\"\r\nimport SettingsModal from \"./SettingsModal\"\r\nimport {Button} from \"carbon-components-react\"\r\nimport Cookies from \"universal-cookie\"\r\n\r\nimport \"./App.scss\"\r\n\r\nconst COOKIENAME = \"macroCounterState\"\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nutrients: [\r\n                {name: \"protein\", value: 0, goal: 170, caPerGram: 4},\r\n                {name: \"carbs\", value: 0, goal: 175, caPerGram: 4},\r\n                {name: \"fat\", value: 0, goal: 40, caPerGram: 9}\r\n            ]\r\n        }\r\n\r\n        this.cookies = new Cookies()\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.resetNutrients = this.resetNutrients.bind(this)\r\n        this.handleAddClick = this.handleAddClick.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(this.cookies.get(COOKIENAME))\r\n    }\r\n\r\n    saveStateToCookies() {\r\n        this.cookies.set(COOKIENAME, this.state)\r\n    }\r\n\r\n    resetNutrients() {\r\n        this.setState( { nutrients: this.state.nutrients.map((nutrient) => Object.assign({}, nutrient, {value: 0})) }, () => this.saveStateToCookies() )\r\n    }\r\n\r\n    //handle modal setting change\r\n    handleChange(e, name, field) {\r\n        if (e.target && e.target.value) {\r\n            const attr = {}\r\n            attr[field] = parseInt(e.target.value)\r\n            this.setState( {nutrients: this.state.nutrients.map((nutrient) => (nutrient.name === name) ? Object.assign({}, nutrient, attr) : nutrient) }, () => this.saveStateToCookies())\r\n        }\r\n    }\r\n\r\n    handleAddClick(name, value) {\r\n        this.setState( {nutrients: this.state.nutrients.map((nutrient) => (nutrient.name === name) ? Object.assign({}, nutrient, {value: nutrient.value + parseInt(value)}) : nutrient) }, () => this.saveStateToCookies())\r\n    }\r\n\r\n    render() {\r\n        const calories = this.state.nutrients.reduce((acc, nutrient) => (acc + (nutrient.value * nutrient.caPerGram)), 0)\r\n        const counters = this.state.nutrients.map((nutrient) => <Counter key={nutrient.name} name={nutrient.name} value={nutrient.value} goal={nutrient.goal} onAddClick={this.handleAddClick}/>)\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <h1 className=\"title\">Macronutrient Counter</h1>\r\n                <h3 className=\"calories\">Total Calories: {calories}</h3>\r\n                <div className=\"counters\">\r\n                    {counters}\r\n                </div>\r\n                <div>\r\n                    <div className=\"init-btn\"><SettingsModal nutrients={this.state.nutrients} onChange={this.handleChange} /></div>\r\n                    <Button className=\"init-btn\" onClick={this.resetNutrients}>Reset</Button>\r\n                </div>\r\n                <p class='link'>Hosted on <a href='https://github.com/igullickson/macronutrient-counter'>GitHub</a></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}